<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kcsj.gwglxt.mapper.ProcessNodeMapper" >

    <resultMap id="BaseResultMap" type="com.kcsj.gwglxt.entity.ProcessNode" >
        <id column="process_node_id" property="processNodeId"   />
        <result column="process_node_process" property="processNodeProcess"   />
        <result column="process_node_name" property="processNodeName" jdbcType="VARCHAR" />
        <result column="process_node_department" property="processNodeDepartment"   />
        <result column="process_node_position" property="processNodePosition"   />
        <result column="process_node_step" property="processNodeStep"  />
        <result column="process_node_isdelete" property="processNodeIsdelete"  />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        process_node_id, process_node_process, process_node_name, process_node_department, 
        process_node_position, process_node_step, process_node_isdelete
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kcsj.gwglxt.entity.ProcessNodeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from process_node
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from process_node
        where process_node_id = #{processNodeId,jdbcType=CHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from process_node
        where process_node_id = #{processNodeId,jdbcType=CHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.kcsj.gwglxt.entity.ProcessNodeExample" >
        delete from process_node
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.kcsj.gwglxt.entity.ProcessNode" >
        insert into process_node (process_node_id, process_node_process, process_node_name, 
            process_node_department, process_node_position, 
            process_node_step, process_node_isdelete)
        values (#{processNodeId,jdbcType=CHAR}, #{processNodeProcess,jdbcType=CHAR}, #{processNodeName,jdbcType=VARCHAR},
            #{processNodeDepartment,jdbcType=CHAR}, #{processNodePosition,jdbcType=CHAR},
            #{processNodeStep,jdbcType=INTEGER}, #{processNodeIsdelete,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.kcsj.gwglxt.entity.ProcessNode" >
        insert into process_node
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="processNodeId != null" >
                process_node_id,
            </if>
            <if test="processNodeProcess != null" >
                process_node_process,
            </if>
            <if test="processNodeName != null" >
                process_node_name,
            </if>
            <if test="processNodeDepartment != null" >
                process_node_department,
            </if>
            <if test="processNodePosition != null" >
                process_node_position,
            </if>
            <if test="processNodeStep != null" >
                process_node_step,
            </if>
            <if test="processNodeIsdelete != null" >
                process_node_isdelete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="processNodeId != null" >
                #{processNodeId,jdbcType=CHAR},
            </if>
            <if test="processNodeProcess != null" >
                #{processNodeProcess,jdbcType=CHAR},
            </if>
            <if test="processNodeName != null" >
                #{processNodeName,jdbcType=VARCHAR},
            </if>
            <if test="processNodeDepartment != null" >
                #{processNodeDepartment,jdbcType=CHAR},
            </if>
            <if test="processNodePosition != null" >
                #{processNodePosition,jdbcType=CHAR},
            </if>
            <if test="processNodeStep != null" >
                #{processNodeStep,jdbcType=INTEGER},
            </if>
            <if test="processNodeIsdelete != null" >
                #{processNodeIsdelete,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.kcsj.gwglxt.entity.ProcessNodeExample" resultType="java.lang.Integer" >
        select count(*) from process_node
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update process_node
        <set >
            <if test="record.processNodeId != null" >
                process_node_id = #{record.processNodeId,jdbcType=CHAR},
            </if>
            <if test="record.processNodeProcess != null" >
                process_node_process = #{record.processNodeProcess,jdbcType=CHAR},
            </if>
            <if test="record.processNodeName != null" >
                process_node_name = #{record.processNodeName,jdbcType=VARCHAR},
            </if>
            <if test="record.processNodeDepartment != null" >
                process_node_department = #{record.processNodeDepartment,jdbcType=CHAR},
            </if>
            <if test="record.processNodePosition != null" >
                process_node_position = #{record.processNodePosition,jdbcType=CHAR},
            </if>
            <if test="record.processNodeStep != null" >
                process_node_step = #{record.processNodeStep,jdbcType=INTEGER},
            </if>
            <if test="record.processNodeIsdelete != null" >
                process_node_isdelete = #{record.processNodeIsdelete,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update process_node
        set process_node_id = #{record.processNodeId,jdbcType=CHAR},
            process_node_process = #{record.processNodeProcess,jdbcType=CHAR},
            process_node_name = #{record.processNodeName,jdbcType=VARCHAR},
            process_node_department = #{record.processNodeDepartment,jdbcType=CHAR},
            process_node_position = #{record.processNodePosition,jdbcType=CHAR},
            process_node_step = #{record.processNodeStep,jdbcType=INTEGER},
            process_node_isdelete = #{record.processNodeIsdelete,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.kcsj.gwglxt.entity.ProcessNode" >
        update process_node
        <set >
            <if test="processNodeProcess != null" >
                process_node_process = #{processNodeProcess,jdbcType=CHAR},
            </if>
            <if test="processNodeName != null" >
                process_node_name = #{processNodeName,jdbcType=VARCHAR},
            </if>
            <if test="processNodeDepartment != null" >
                process_node_department = #{processNodeDepartment,jdbcType=CHAR},
            </if>
            <if test="processNodePosition != null" >
                process_node_position = #{processNodePosition,jdbcType=CHAR},
            </if>
            <if test="processNodeStep != null" >
                process_node_step = #{processNodeStep,jdbcType=INTEGER},
            </if>
            <if test="processNodeIsdelete != null" >
                process_node_isdelete = #{processNodeIsdelete,jdbcType=INTEGER},
            </if>
        </set>
        where process_node_id = #{processNodeId,jdbcType=CHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.kcsj.gwglxt.entity.ProcessNode" >
        update process_node
        set process_node_process = #{processNodeProcess,jdbcType=CHAR},
            process_node_name = #{processNodeName,jdbcType=VARCHAR},
            process_node_department = #{processNodeDepartment,jdbcType=CHAR},
            process_node_position = #{processNodePosition,jdbcType=CHAR},
            process_node_step = #{processNodeStep,jdbcType=INTEGER},
            process_node_isdelete = #{processNodeIsdelete,jdbcType=INTEGER}
        where process_node_id = #{processNodeId,jdbcType=CHAR}
    </update>
    <select id="getMaxStep" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT MAX(process_node_step) FROM process_node WHERE process_node_process =#{processNodeProcess}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kcsj.gwglxt.mapper.MobjectMapper" >

    <resultMap id="BaseResultMap" type="com.kcsj.gwglxt.entity.Mobject" >
        <id column="mobject_id" property="mobjectId"   />
        <result column="mobject_user" property="mobjectUser"   />
        <result column="mobject_message" property="mobjectMessage"   />
        <result column="mobject_isread" property="mobjectIsread"  />
    </resultMap>
    <resultMap id="messageInfo" type="com.kcsj.gwglxt.DTO.MessageCustom">
        <association property="mobject" javaType="com.kcsj.gwglxt.entity.Mobject">
            <id column="mobject_id" property="mobjectId"   />
            <result column="mobject_user" property="mobjectUser"   />
            <result column="mobject_message" property="mobjectMessage"   />
            <result column="mobject_isread" property="mobjectIsread"  />
        </association>
        <association property="message" javaType="com.kcsj.gwglxt.entity.Message">
            <result column="message_content" property="messageContent" jdbcType="VARCHAR" />
            <result column="message_time" property="messageTime" jdbcType="VARCHAR" />
            <result column="message_type" property="messageType"  />
        </association>
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        mobject_id, mobject_user, mobject_message, mobject_isread
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kcsj.gwglxt.entity.MobjectExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from mobject
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from mobject
        where mobject_id = #{mobjectId,jdbcType=CHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from mobject
        where mobject_id = #{mobjectId,jdbcType=CHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.kcsj.gwglxt.entity.MobjectExample" >
        delete from mobject
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.kcsj.gwglxt.entity.Mobject" >
        insert into mobject (mobject_id, mobject_user, mobject_message, 
            mobject_isread)
        values (#{mobjectId,jdbcType=CHAR}, #{mobjectUser,jdbcType=CHAR}, #{mobjectMessage,jdbcType=CHAR},
            #{mobjectIsread,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.kcsj.gwglxt.entity.Mobject" >
        insert into mobject
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="mobjectId != null" >
                mobject_id,
            </if>
            <if test="mobjectUser != null" >
                mobject_user,
            </if>
            <if test="mobjectMessage != null" >
                mobject_message,
            </if>
            <if test="mobjectIsread != null" >
                mobject_isread,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="mobjectId != null" >
                #{mobjectId,jdbcType=CHAR},
            </if>
            <if test="mobjectUser != null" >
                #{mobjectUser,jdbcType=CHAR},
            </if>
            <if test="mobjectMessage != null" >
                #{mobjectMessage,jdbcType=CHAR},
            </if>
            <if test="mobjectIsread != null" >
                #{mobjectIsread,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.kcsj.gwglxt.entity.MobjectExample" resultType="java.lang.Integer" >
        select count(*) from mobject
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update mobject
        <set >
            <if test="record.mobjectId != null" >
                mobject_id = #{record.mobjectId,jdbcType=CHAR},
            </if>
            <if test="record.mobjectUser != null" >
                mobject_user = #{record.mobjectUser,jdbcType=CHAR},
            </if>
            <if test="record.mobjectMessage != null" >
                mobject_message = #{record.mobjectMessage,jdbcType=CHAR},
            </if>
            <if test="record.mobjectIsread != null" >
                mobject_isread = #{record.mobjectIsread,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update mobject
        set mobject_id = #{record.mobjectId,jdbcType=CHAR},
            mobject_user = #{record.mobjectUser,jdbcType=CHAR},
            mobject_message = #{record.mobjectMessage,jdbcType=CHAR},
            mobject_isread = #{record.mobjectIsread,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.kcsj.gwglxt.entity.Mobject" >
        update mobject
        <set >
            <if test="mobjectUser != null" >
                mobject_user = #{mobjectUser,jdbcType=CHAR},
            </if>
            <if test="mobjectMessage != null" >
                mobject_message = #{mobjectMessage,jdbcType=CHAR},
            </if>
            <if test="mobjectIsread != null" >
                mobject_isread = #{mobjectIsread,jdbcType=INTEGER},
            </if>
        </set>
        where mobject_id = #{mobjectId,jdbcType=CHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.kcsj.gwglxt.entity.Mobject" >
        update mobject
        set mobject_user = #{mobjectUser,jdbcType=CHAR},
            mobject_message = #{mobjectMessage,jdbcType=CHAR},
            mobject_isread = #{mobjectIsread,jdbcType=INTEGER}
        where mobject_id = #{mobjectId,jdbcType=CHAR}
    </update>
    <insert id="insertMbj" parameterType="com.kcsj.gwglxt.entity.Mobject" >
        insert into mobject (mobject_id, mobject_user, mobject_message,
            mobject_isread)
        values (#{mobjectId,jdbcType=CHAR}, #{mobjectUser,jdbcType=CHAR}, #{mobjectMessage,jdbcType=CHAR},
            #{mobjectIsread,jdbcType=INTEGER})
    </insert>
    <select id="getMyAllMessage" parameterType="java.lang.String" resultMap="messageInfo">
        SELECT
	mo.mobject_id,
	mo.mobject_user,
	mo.mobject_message,
	mo.mobject_isread,
	me.message_content,
	me.message_time,
	me.message_type
FROM
	mobject mo,
	message me
WHERE
	mo.mobject_message = me.message_id
AND mo.mobject_user = #{mobjectUser}
and me.message_isdelete= '0'
    </select>
    <select id="getUnReadMsg" parameterType="java.lang.String" resultMap="messageInfo">
        SELECT
	mo.mobject_id,
	mo.mobject_user,
	mo.mobject_message,
	mo.mobject_isread,
	me.message_content,
	me.message_time,
	me.message_type
FROM
	mobject mo,
	message me
WHERE
	mo.mobject_message = me.message_id
AND mo.mobject_user = #{mobjectUser}
and mo.mobject_isread = '0'
and me.message_isdelete= '0'
    </select>
</mapper>